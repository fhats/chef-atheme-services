/* NickServ modules.
 *
 * Here you can disable or enable certain features of NickServ, by
 * defining which modules are loaded. You can even disable NickServ
 * entirely. Please note however, that an authentication service
 * (either NickServ, or UserServ) are required for proper functionality.
 *
 * The CrackLib password validation module requires CrackLib to be
 * installed on your system in order to use.
 *
 * Core components                              modules/nickserv/main
 * Nickname access lists                        modules/nickserv/access
 * Bad email address blocking                   modules/nickserv/badmail
 * CertFP fingerprint managment                 modules/nickserv/cert
 * CrackLib password validation                 modules/nickserv/cracklib
 * DROP command                                 modules/nickserv/drop
 * Nickname enforcement                         modules/nickserv/enforce
 * GHOST command                                modules/nickserv/ghost
 * GROUP and UNGROUP commands                   modules/nickserv/group
 * HELP command                                 modules/nickserv/help
 * Nickname expiry override (HOLD command)      modules/nickserv/hold
 * IDENTIFY command                             modules/nickserv/identify
 * INFO command                                 modules/nickserv/info
 * Last quit message in INFO                    modules/nickserv/info_lastquit
 * LIST command                                 modules/nickserv/list
 * LISTMAIL command                             modules/nickserv/listmail
 * LISTOWNMAIL command                          modules/nickserv/listownmail
 * LOGIN command (for no_nick_ownership)        modules/nickserv/login
 * LOGOUT command                               modules/nickserv/logout
 * MARK command                                 modules/nickserv/mark
 * FREEZE command                               modules/nickserv/freeze
 * LISTCHANS command                            modules/nickserv/listchans
 * LISTGROUPS command                           modules/nickserv/listgroups
 * REGISTER command                             modules/nickserv/register
 * Bypass registration limits (REGNOLIMIT)      modules/nickserv/regnolimit
 * Password reset (RESETPASS command)           modules/nickserv/resetpass
 * RESTRICT command                             modules/nickserv/restrict
 * Password return (RETURN command)             modules/nickserv/return
 * Password retrieval (SENDPASS command)        modules/nickserv/sendpass
 * Password retrieval allowed to normal users   modules/nickserv/sendpass_user
 * SET command core                             modules/nickserv/set_core
 * Change primary nickname (SET ACCOUNTNAME)    modules/nickserv/set_accountname
 * SET EMAIL command                            modules/nickserv/set_email
 * SET EMAILMEMOS command                       modules/nickserv/set_emailmemos
 * SET ENFORCETIME command                      modules/nickserv/set_enforcetime
 * SET HIDEMAIL command                         modules/nickserv/set_hidemail
 * SET LANGUAGE command                         modules/nickserv/set_language
 * SET NEVERGROUP command                       modules/nickserv/set_nevergroup
 * SET NEVEROP command                          modules/nickserv/set_neverop
 * SET NOGREET command                          modules/nickserv/set_nogreet
 * SET NOMEMO command                           modules/nickserv/set_nomemo
 * SET NOOP command                             modules/nickserv/set_noop
 * SET PASSWORD command                         modules/nickserv/set_password
 * PRIVMSG instead of NOTICE (SET PRIVMSG cmd)  modules/nickserv/set_privmsg
 * Account info hiding (SET PRIVATE command)    modules/nickserv/set_private
 * SET PROPERTY command                         modules/nickserv/set_property
 * SET QUIETCHG command                         modules/nickserv/set_quietchg
 * Password retrieval uses code (SETPASS cmd)   modules/nickserv/setpass
 * STATUS command                               modules/nickserv/status
 * Nickname metadata viewer (TAXONOMY command)  modules/nickserv/taxonomy
 * VACATION command                             modules/nickserv/vacation
 * VERIFY command                               modules/nickserv/verify
 * VHOST command                                modules/nickserv/vhost
 */
loadmodule "modules/nickserv/main";

<% @config['modules'].each do |modname, enabled| %>
<% if enabled %>loadmodule "modules/nickserv/<%= modname %>";<% end %>
<% end %>

nickserv {
    <%= optional_boolean_directive("spam", @config, "spam") %>

    <%= optional_boolean_directive("no_nick_ownership", @config, "no_nick_ownership") %>

    nick = "<%= @config['nick'] %>";
    user = "<%= @config['user'] %>";
    host = "<%= @config['host'] %>";
    real = "<%= @config['real'] %>";

    aliases {<% @config['aliases'].each do |name, target| %>
        "<%= name %>" = "<%= target %>";<% end %>
    };

    // TODO
    access {
    };

    maxnicks = <%= @config['maxnicks'] %>;

    <%= optional_directive("expire", @config, "expire") %>
    <%= optional_directive("enforce_expire", @config, "enforce_expire") %>
    <%= optional_directive("enforce_delay", @config, "enforce_delay") %>
    <%= optional_directive("enforce_prefix", @config, "enforce_prefix") %>

    <%= optional_directive("cracklib_dict", @config, "cracklib_dict") %>
    <%= optional_boolean_directive("cracklib_warn", @config, "cracklib_warn") %>

    // TODO
    /* (*)emailexempts
     * A list of email addresses that will be exempt from the check of how many
     * accounts one user may have. Any email address in this block may register
     * an unlimited number of accounts/usernames.
     */
    emailexempts {
    };
};

