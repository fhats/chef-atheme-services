<% if !@config['ircd_protocol_module'].empty? %>
loadmodule "modules/protocol/<%= @config['ircd_protocol_module'] %>";
<% end %>

<% @config['additional_protocol_modules'].each do |mod| %>
loadmodule "modules/protocol/<%= mod %>";<% end %>

loadmodule "modules/backend/<%= @config['database_format'] %>";

loadmodule "modules/crypto/<%= @config['crypto'] %>";
<% @config['additional_crypto'].each do |mod| %>
loadmodule "modules/protocol/<%= mod %>";<% end %>

<% if !@config['authentication'].empty? %>
loadmodule "modules/protocol/<%= @config['authentication'] %>";
<% end %>

<% ["alis",
    "botserv",
    "chanfix",
    "chanserv",
    "exttarget",
    "gameserv",
    "global",
    "groupserv",
    "helpserv",
    "hostserv",
    "httpd",
    "infoserv",
    "memoserv",
    "nickserv",
    "operserv",
    "rpgserv",
    "saslserv",
    "statserv"].select { |feature|
        @config[feature]['enable']
    }.each do |feature| %>include "etc/<%= feature %>.conf";
<% end %>

<% if @config['xmlrpc']['enable'] %>
loadmodule "modules/misc/xmlrpc";
<% end %>

<% @config['contrib_modules'].each do |mod| %>
loadmodule "modules/contrib/<%= mod %>";<% end %>

include "etc/oper.conf";

/******************************************************************************
 * SERVICES RUNTIME CONFIGURATION SECTION.                                    *
 ******************************************************************************/

/* The serverinfo{} block defines how we appear on the IRC network. */
serverinfo {
	name = "<%= @config['serverinfo']['name'] %>";
	desc = "<%= @config['serverinfo']['desc'] %>";
	numeric = "<%= @config['serverinfo']['numeric'] %>";
	recontime = <%= @config['serverinfo']['recontime'] %>;
	netname = "<%= @config['serverinfo']['netname'] %>";
	hidehostsuffix = "<%= @config['serverinfo']['hidehostsuffix'] %>";
	adminname = "<%= @config['serverinfo']['adminname'] %>";
	adminemail = "<%= @config['serverinfo']['adminemail'] %>";
	<%= optional_directive("registeremail", @config['serverinfo'], "registeremail") %>
	<%= optional_boolean_directive("hidden", @config['serverinfo'], "hidden") %>
	<%= optional_directive("mta", @config['serverinfo'], "mta") %>
	loglevel = {<% @config['serverinfo']['loglevel'].select { |lvl, status| status }.each do |lvl, _| %>
		<%= lvl %>;<% end %>
	};
	maxlogins = <%= @config['serverinfo']['maxlogins'] %>;
	maxusers = <%= @config['serverinfo']['maxusers'] %>;
	mdlimit = <%= @config['serverinfo']['mdlimit'] %>;
	emaillimit = <%= @config['serverinfo']['emaillimit'] %>;
	emailtime = <%= @config['serverinfo']['emailtime'] %>;
	auth = <%= @config['serverinfo']['auth'] %>;
	casemapping = <%= @config['serverinfo']['casemapping'] %>;
};

<% @config['uplinks'].each do |uplink, cfg| %>
uplink "<%= uplink %>" {
	host = "<%= cfg['host'] %>";
	port = "<%= cfg['port'] %>";
	receive_password = "<%= cfg['receive_password'] %>";
	send_password = "<%= cfg['send_password'] %>";
	<%= optional_directive("vhost", cfg, "vhost") %>
};<% end %>

ldap {
	<%= optional_directive("url", @config['ldap'], "url") %>
	<%= optional_directive("dnformat", @config['ldap'], "dnformat") %>
};

/******************************************************************************
 * LOGGING SECTION.                                                           *
 ******************************************************************************/

/*
 * logfile{} blocks can be used to set up log files other than the master
 * logfile used by services, which is controlled by serverinfo::loglevel.
 *
 * The various logging categories are:
 *      debug, all      - meta-keyword for all possible categories
 *      trace           - meta-keyword for a little bit of info
 *      misc            - like trace, but with some more miscillaneous info
 *      notice          - meta-keyword for notice-like information
 * ------------------------------------------------------------------------------
 *      error           - critical errors
 *      info            - miscillaneous log notices
 *      verbose         - A bit more verbose than info, not quite as spammy as debug
 *      commands        - all command use
 *      admin           - administrative command use
 *      register        - account and channel registrations
 *      set             - changes of account or channel settings
 *      request         - user requests (currently only vhosts)
 *      network         - log notices related to network status
 *      rawdata         - log raw data sent and received by services
 *      wallops         - <not yet used>
 *      denycmd         - security model denials (commands, permissions)
 */

<% @config['logging'].each do |logfile, settings| %>
logfile "<%= logfile %>" { <% settings.each do |setting| %><%= setting %>; <% end %>};<% end %>


/******************************************************************************
 * GENERAL PARAMETERS CONFIGURATION SECTION.                                  *
 ******************************************************************************/

/* The general {} block defines general configuration options. */
general {
	<%= optional_directive("permissive_mode", @config, "permissive_mode") %>
	<%= optional_directive("helpchan", @config, "helpchan") %>
	<%= optional_directive("helpurl", @config, "helpurl") %>
	<%= optional_boolean_directive("silent", @config, "silent") %>
	<%= optional_boolean_directive("verbose_wallops", @config, "verbose_wallops") %>
	<%= optional_boolean_directive("join_chans", @config, "join_chans") %>
	<%= optional_boolean_directive("leave_chans", @config, "leave_chans") %>
	<%= optional_boolean_directive("secure", @config, "secure") %>

	uflags = { <% @config['uflags'].select {|flag, st| st }.each do |flag, _| %><%= flag %>; <% end %>};
	cflags = { <% @config['cflags'].select {|flag, st| st }.each do |flag, _| %><%= flag %>; <% end %>};

	<%= optional_boolean_directive("raw", @config, "raw") %>

	flood_msgs = <%= @config['flood_msgs'] %>;
	flood_time = <%= @config['flood_time'] %>;

	ratelimit_uses = <%= @config['ratelimit_uses'] %>;
	ratelimit_period = <%= @config['ratelimit_period'] %>;

	kline_time = <%= @config['kline_time'] %>;

	<%= optional_boolean_directive("kline_with_ident", @config, "kline_with_ident") %>
	<%= optional_boolean_directive("kline_verified_ident", @config, "kline_verified_ident") %>

	clone_time = <%= @config['clone_time'] %>;

	commit_interval = <%= @config['commit_interval'] %>;

	default_clone_allowed = <%= @config['default_clone_allowed'] %>;
	default_clone_warn = <%= @config['default_clone_warn'] %>;
	<%= optional_boolean_directive("clone_identified_increase_limit", @config, "clone_identified_increase_limit") %>

	uplink_sendq_limit = <%= @config['uplink_sendq_limit'] %>;

	language = "<%= @config['language'] %>";

	exempts {<% @config['exempts'].each do |exempt| %>
		<%= exempt %>;
	<% end %>
	};

	<%= optional_boolean_directive("allow_taint", @config, "allow_taint") %>

	immune_level = <%= @config['immune_level'] %>;
};
